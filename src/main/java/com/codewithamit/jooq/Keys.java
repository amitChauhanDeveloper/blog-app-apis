/*
 * This file is generated by jOOQ.
 */
package com.codewithamit.jooq;


import com.codewithamit.jooq.tables.Categories;
import com.codewithamit.jooq.tables.Comments;
import com.codewithamit.jooq.tables.Posts;
import com.codewithamit.jooq.tables.Role;
import com.codewithamit.jooq.tables.UserRole;
import com.codewithamit.jooq.tables.Users;
import com.codewithamit.jooq.tables.records.CategoriesRecord;
import com.codewithamit.jooq.tables.records.CommentsRecord;
import com.codewithamit.jooq.tables.records.PostsRecord;
import com.codewithamit.jooq.tables.records.RoleRecord;
import com.codewithamit.jooq.tables.records.UserRoleRecord;
import com.codewithamit.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * blog-app-apis.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoriesRecord> KEY_CATEGORIES_PRIMARY = Internal.createUniqueKey(Categories.CATEGORIES, DSL.name("KEY_categories_PRIMARY"), new TableField[] { Categories.CATEGORIES.CATEGORYID }, true);
    public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = Internal.createUniqueKey(Comments.COMMENTS, DSL.name("KEY_comments_PRIMARY"), new TableField[] { Comments.COMMENTS.ID }, true);
    public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = Internal.createUniqueKey(Posts.POSTS, DSL.name("KEY_posts_PRIMARY"), new TableField[] { Posts.POSTS.POSTID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_PRIMARY"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_UK_6DOTKOTT2KJSP8VW4D0M25FB7 = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_UK_6dotkott2kjsp8vw4d0m25fb7"), new TableField[] { Users.USERS.EMAIL }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentsRecord, PostsRecord> FK2BLGWWE4INOQMIWJBLL9R4EQR = Internal.createForeignKey(Comments.COMMENTS, DSL.name("FK2blgwwe4inoqmiwjbll9r4eqr"), new TableField[] { Comments.COMMENTS.POST_POSTID }, Keys.KEY_POSTS_PRIMARY, new TableField[] { Posts.POSTS.POSTID }, true);
    public static final ForeignKey<PostsRecord, UsersRecord> FK5LIDM6CQBC7U4XHQPXM898QME = Internal.createForeignKey(Posts.POSTS, DSL.name("FK5lidm6cqbc7u4xhqpxm898qme"), new TableField[] { Posts.POSTS.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PostsRecord, CategoriesRecord> FKIJNWR3BRS8VAOSL80JG9RP7UC = Internal.createForeignKey(Posts.POSTS, DSL.name("FKijnwr3brs8vaosl80jg9rp7uc"), new TableField[] { Posts.POSTS.CATEGORY_ID }, Keys.KEY_CATEGORIES_PRIMARY, new TableField[] { Categories.CATEGORIES.CATEGORYID }, true);
    public static final ForeignKey<UserRoleRecord, UsersRecord> FK6513MBU5EM1WSL88XIVF5EK2M = Internal.createForeignKey(UserRole.USER_ROLE, DSL.name("FK6513mbu5em1wsl88xivf5ek2m"), new TableField[] { UserRole.USER_ROLE.USERS }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserRoleRecord, RoleRecord> FKBUP990IGVUKH84QIHO5RENPI2 = Internal.createForeignKey(UserRole.USER_ROLE, DSL.name("FKbup990igvukh84qiho5renpi2"), new TableField[] { UserRole.USER_ROLE.ROLE }, Keys.KEY_ROLE_PRIMARY, new TableField[] { Role.ROLE.ID }, true);
}
