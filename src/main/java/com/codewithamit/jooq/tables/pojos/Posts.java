/*
 * This file is generated by jOOQ.
 */
package com.codewithamit.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Posts implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       postid;
    private LocalDateTime addeddate;
    private String        content;
    private String        imagename;
    private String        postTitle;
    private Integer       categoryId;
    private Integer       userId;

    public Posts() {}

    public Posts(Posts value) {
        this.postid = value.postid;
        this.addeddate = value.addeddate;
        this.content = value.content;
        this.imagename = value.imagename;
        this.postTitle = value.postTitle;
        this.categoryId = value.categoryId;
        this.userId = value.userId;
    }

    public Posts(
        Integer       postid,
        LocalDateTime addeddate,
        String        content,
        String        imagename,
        String        postTitle,
        Integer       categoryId,
        Integer       userId
    ) {
        this.postid = postid;
        this.addeddate = addeddate;
        this.content = content;
        this.imagename = imagename;
        this.postTitle = postTitle;
        this.categoryId = categoryId;
        this.userId = userId;
    }

    /**
     * Getter for <code>blog-app-apis.posts.postId</code>.
     */
    public Integer getPostid() {
        return this.postid;
    }

    /**
     * Setter for <code>blog-app-apis.posts.postId</code>.
     */
    public Posts setPostid(Integer postid) {
        this.postid = postid;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.addedDate</code>.
     */
    public LocalDateTime getAddeddate() {
        return this.addeddate;
    }

    /**
     * Setter for <code>blog-app-apis.posts.addedDate</code>.
     */
    public Posts setAddeddate(LocalDateTime addeddate) {
        this.addeddate = addeddate;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>blog-app-apis.posts.content</code>.
     */
    public Posts setContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.imageName</code>.
     */
    public String getImagename() {
        return this.imagename;
    }

    /**
     * Setter for <code>blog-app-apis.posts.imageName</code>.
     */
    public Posts setImagename(String imagename) {
        this.imagename = imagename;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.post_title</code>.
     */
    public String getPostTitle() {
        return this.postTitle;
    }

    /**
     * Setter for <code>blog-app-apis.posts.post_title</code>.
     */
    public Posts setPostTitle(String postTitle) {
        this.postTitle = postTitle;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.category_id</code>.
     */
    public Integer getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>blog-app-apis.posts.category_id</code>.
     */
    public Posts setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>blog-app-apis.posts.user_id</code>.
     */
    public Posts setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Posts other = (Posts) obj;
        if (postid == null) {
            if (other.postid != null)
                return false;
        }
        else if (!postid.equals(other.postid))
            return false;
        if (addeddate == null) {
            if (other.addeddate != null)
                return false;
        }
        else if (!addeddate.equals(other.addeddate))
            return false;
        if (content == null) {
            if (other.content != null)
                return false;
        }
        else if (!content.equals(other.content))
            return false;
        if (imagename == null) {
            if (other.imagename != null)
                return false;
        }
        else if (!imagename.equals(other.imagename))
            return false;
        if (postTitle == null) {
            if (other.postTitle != null)
                return false;
        }
        else if (!postTitle.equals(other.postTitle))
            return false;
        if (categoryId == null) {
            if (other.categoryId != null)
                return false;
        }
        else if (!categoryId.equals(other.categoryId))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.postid == null) ? 0 : this.postid.hashCode());
        result = prime * result + ((this.addeddate == null) ? 0 : this.addeddate.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.imagename == null) ? 0 : this.imagename.hashCode());
        result = prime * result + ((this.postTitle == null) ? 0 : this.postTitle.hashCode());
        result = prime * result + ((this.categoryId == null) ? 0 : this.categoryId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Posts (");

        sb.append(postid);
        sb.append(", ").append(addeddate);
        sb.append(", ").append(content);
        sb.append(", ").append(imagename);
        sb.append(", ").append(postTitle);
        sb.append(", ").append(categoryId);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
