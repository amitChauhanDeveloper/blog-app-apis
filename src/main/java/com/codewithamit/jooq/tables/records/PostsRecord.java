/*
 * This file is generated by jOOQ.
 */
package com.codewithamit.jooq.tables.records;


import com.codewithamit.jooq.tables.Posts;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> implements Record7<Integer, LocalDateTime, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>blog-app-apis.posts.postId</code>.
     */
    public PostsRecord setPostid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.postId</code>.
     */
    public Integer getPostid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blog-app-apis.posts.addedDate</code>.
     */
    public PostsRecord setAddeddate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.addedDate</code>.
     */
    public LocalDateTime getAddeddate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>blog-app-apis.posts.content</code>.
     */
    public PostsRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blog-app-apis.posts.imageName</code>.
     */
    public PostsRecord setImagename(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.imageName</code>.
     */
    public String getImagename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blog-app-apis.posts.post_title</code>.
     */
    public PostsRecord setPostTitle(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.post_title</code>.
     */
    public String getPostTitle() {
        return (String) get(4);
    }

    /**
     * Setter for <code>blog-app-apis.posts.category_id</code>.
     */
    public PostsRecord setCategoryId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>blog-app-apis.posts.user_id</code>.
     */
    public PostsRecord setUserId(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>blog-app-apis.posts.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDateTime, String, String, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDateTime, String, String, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Posts.POSTS.POSTID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Posts.POSTS.ADDEDDATE;
    }

    @Override
    public Field<String> field3() {
        return Posts.POSTS.CONTENT;
    }

    @Override
    public Field<String> field4() {
        return Posts.POSTS.IMAGENAME;
    }

    @Override
    public Field<String> field5() {
        return Posts.POSTS.POST_TITLE;
    }

    @Override
    public Field<Integer> field6() {
        return Posts.POSTS.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Posts.POSTS.USER_ID;
    }

    @Override
    public Integer component1() {
        return getPostid();
    }

    @Override
    public LocalDateTime component2() {
        return getAddeddate();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public String component4() {
        return getImagename();
    }

    @Override
    public String component5() {
        return getPostTitle();
    }

    @Override
    public Integer component6() {
        return getCategoryId();
    }

    @Override
    public Integer component7() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getPostid();
    }

    @Override
    public LocalDateTime value2() {
        return getAddeddate();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public String value4() {
        return getImagename();
    }

    @Override
    public String value5() {
        return getPostTitle();
    }

    @Override
    public Integer value6() {
        return getCategoryId();
    }

    @Override
    public Integer value7() {
        return getUserId();
    }

    @Override
    public PostsRecord value1(Integer value) {
        setPostid(value);
        return this;
    }

    @Override
    public PostsRecord value2(LocalDateTime value) {
        setAddeddate(value);
        return this;
    }

    @Override
    public PostsRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public PostsRecord value4(String value) {
        setImagename(value);
        return this;
    }

    @Override
    public PostsRecord value5(String value) {
        setPostTitle(value);
        return this;
    }

    @Override
    public PostsRecord value6(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public PostsRecord value7(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public PostsRecord values(Integer value1, LocalDateTime value2, String value3, String value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Integer postid, LocalDateTime addeddate, String content, String imagename, String postTitle, Integer categoryId, Integer userId) {
        super(Posts.POSTS);

        setPostid(postid);
        setAddeddate(addeddate);
        setContent(content);
        setImagename(imagename);
        setPostTitle(postTitle);
        setCategoryId(categoryId);
        setUserId(userId);
    }
}
